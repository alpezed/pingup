/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as AppProfileRouteImport } from './routes/_app.profile'
import { Route as AppMessagesRouteImport } from './routes/_app.messages'
import { Route as AppDiscoverRouteImport } from './routes/_app.discover'
import { Route as AppCreatePostRouteImport } from './routes/_app.create-post'
import { Route as AppConnectionsRouteImport } from './routes/_app.connections'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)
const AppMessagesRoute = AppMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => AppRoute,
} as any)
const AppDiscoverRoute = AppDiscoverRouteImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => AppRoute,
} as any)
const AppCreatePostRoute = AppCreatePostRouteImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => AppRoute,
} as any)
const AppConnectionsRoute = AppConnectionsRouteImport.update({
  id: '/connections',
  path: '/connections',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/connections': typeof AppConnectionsRoute
  '/create-post': typeof AppCreatePostRoute
  '/discover': typeof AppDiscoverRoute
  '/messages': typeof AppMessagesRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/connections': typeof AppConnectionsRoute
  '/create-post': typeof AppCreatePostRoute
  '/discover': typeof AppDiscoverRoute
  '/messages': typeof AppMessagesRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/connections': typeof AppConnectionsRoute
  '/_app/create-post': typeof AppCreatePostRoute
  '/_app/discover': typeof AppDiscoverRoute
  '/_app/messages': typeof AppMessagesRoute
  '/_app/profile': typeof AppProfileRoute
  '/_app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/connections'
    | '/create-post'
    | '/discover'
    | '/messages'
    | '/profile'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/connections'
    | '/create-post'
    | '/discover'
    | '/messages'
    | '/profile'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/_app/connections'
    | '/_app/create-post'
    | '/_app/discover'
    | '/_app/messages'
    | '/_app/profile'
    | '/_app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/messages': {
      id: '/_app/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof AppMessagesRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/discover': {
      id: '/_app/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof AppDiscoverRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/create-post': {
      id: '/_app/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof AppCreatePostRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/connections': {
      id: '/_app/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof AppConnectionsRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppConnectionsRoute: typeof AppConnectionsRoute
  AppCreatePostRoute: typeof AppCreatePostRoute
  AppDiscoverRoute: typeof AppDiscoverRoute
  AppMessagesRoute: typeof AppMessagesRoute
  AppProfileRoute: typeof AppProfileRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppConnectionsRoute: AppConnectionsRoute,
  AppCreatePostRoute: AppCreatePostRoute,
  AppDiscoverRoute: AppDiscoverRoute,
  AppMessagesRoute: AppMessagesRoute,
  AppProfileRoute: AppProfileRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
