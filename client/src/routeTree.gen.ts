/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteRouteImport } from './routes/_home/route'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as HomeProfileRouteImport } from './routes/_home/profile'
import { Route as HomeMessagesRouteImport } from './routes/_home/messages'
import { Route as HomeDiscoverRouteImport } from './routes/_home/discover'
import { Route as HomeCreatePostRouteImport } from './routes/_home/create-post'
import { Route as HomeConnectionsRouteImport } from './routes/_home/connections'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRouteRoute = HomeRouteRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeProfileRoute = HomeProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeMessagesRoute = HomeMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeDiscoverRoute = HomeDiscoverRouteImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeCreatePostRoute = HomeCreatePostRouteImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeConnectionsRoute = HomeConnectionsRouteImport.update({
  id: '/connections',
  path: '/connections',
  getParentRoute: () => HomeRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/connections': typeof HomeConnectionsRoute
  '/create-post': typeof HomeCreatePostRoute
  '/discover': typeof HomeDiscoverRoute
  '/messages': typeof HomeMessagesRoute
  '/profile': typeof HomeProfileRoute
  '/': typeof HomeIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/connections': typeof HomeConnectionsRoute
  '/create-post': typeof HomeCreatePostRoute
  '/discover': typeof HomeDiscoverRoute
  '/messages': typeof HomeMessagesRoute
  '/profile': typeof HomeProfileRoute
  '/': typeof HomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home': typeof HomeRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_home/connections': typeof HomeConnectionsRoute
  '/_home/create-post': typeof HomeCreatePostRoute
  '/_home/discover': typeof HomeDiscoverRoute
  '/_home/messages': typeof HomeMessagesRoute
  '/_home/profile': typeof HomeProfileRoute
  '/_home/': typeof HomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/connections'
    | '/create-post'
    | '/discover'
    | '/messages'
    | '/profile'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/connections'
    | '/create-post'
    | '/discover'
    | '/messages'
    | '/profile'
    | '/'
  id:
    | '__root__'
    | '/_home'
    | '/login'
    | '/_home/connections'
    | '/_home/create-post'
    | '/_home/discover'
    | '/_home/messages'
    | '/_home/profile'
    | '/_home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_home/profile': {
      id: '/_home/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof HomeProfileRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_home/messages': {
      id: '/_home/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof HomeMessagesRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_home/discover': {
      id: '/_home/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof HomeDiscoverRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_home/create-post': {
      id: '/_home/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof HomeCreatePostRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_home/connections': {
      id: '/_home/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof HomeConnectionsRouteImport
      parentRoute: typeof HomeRouteRoute
    }
  }
}

interface HomeRouteRouteChildren {
  HomeConnectionsRoute: typeof HomeConnectionsRoute
  HomeCreatePostRoute: typeof HomeCreatePostRoute
  HomeDiscoverRoute: typeof HomeDiscoverRoute
  HomeMessagesRoute: typeof HomeMessagesRoute
  HomeProfileRoute: typeof HomeProfileRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeConnectionsRoute: HomeConnectionsRoute,
  HomeCreatePostRoute: HomeCreatePostRoute,
  HomeDiscoverRoute: HomeDiscoverRoute,
  HomeMessagesRoute: HomeMessagesRoute,
  HomeProfileRoute: HomeProfileRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  HomeRouteRoute: HomeRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
